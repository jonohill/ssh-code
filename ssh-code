#!/usr/bin/env bash

set -e

readonly TEMP_DIR=$(mktemp -d)
readonly SSH_KEY="${TEMP_DIR}/ssh_key"

trap 'catch' ERR

finally() {
    trap - ERR
    local pub_key="$(cat "${SSH_KEY}.pub" | tr -d '\n')"
    if grep -F "$pub_key" <~/.ssh/authorized_keys >/dev/null; then
        grep -vF "$pub_key" <~/.ssh/authorized_keys >"$TEMP_DIR/authorized_keys"
        mv "$TEMP_DIR/authorized_keys" ~/.ssh/authorized_keys
    fi
    rm -rf "${TEMP_DIR}"
}

catch() {
    echo "ERROR"
    finally
    exit 1
}

# Generate and load temporary key-pair
ssh-keygen -t ed25519 -q -N "" -f "${SSH_KEY}"
cat "${SSH_KEY}.pub" >> ~/.ssh/authorized_keys

random_port=$(( 1000 + (RANDOM + RANDOM) % 64535 ))
ssh_destination="${@: -1}"

read -r -d '' config_script << CONFIG_SCRIPT_EOM || true

readonly TEMP_DIR=\$(mktemp -d)

echo "$(cat "${SSH_KEY}")" > "\$TEMP_DIR/ssh_key"
chmod 600 "\$TEMP_DIR/ssh_key"

echo "$(ssh-keyscan localhost 2>/dev/null)" >"\$TEMP_DIR/ssh_known_host"

cat > "\${TEMP_DIR}/code" <<- CODE_SCRIPT_EOM
#!/usr/bin/env bash

file_path=\\\$(realpath "\\\$1")
if [[ -d \\\$file_path ]]; then
    code_flag="--folder-uri"
else
    code_flag="--file-uri"
fi
ssh -i "\$TEMP_DIR/ssh_key" -o GlobalKnownHostsFile="\$TEMP_DIR/ssh_known_host" -p ${random_port} localhost \\\\
    "$(which code)" \\\$code_flag "vscode-remote://ssh-remote%2B${ssh_destination}\\\${file_path}"

CODE_SCRIPT_EOM

chmod +x "\${TEMP_DIR}/code"
export PATH=\${TEMP_DIR}:\$PATH

\$SHELL

rm -rf "\${TEMP_DIR}"

CONFIG_SCRIPT_EOM

ssh -R ${random_port}:localhost:22 "$@" -t "$config_script"

finally
